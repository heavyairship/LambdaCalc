let succ = Ln.Lf.Lx.f ((n f) x);
let add = Lm.Ln.Lf.Lx.(m f) ((n f) x);
let mul = Lm.Ln.Lx.m (n x);
let pow = Lm.Ln.n m;
let ++ = succ;
let + = add;
let * = mul;
let ^ = pow;
let fact = LN.first (N ((Lp.pair (* (first p) (second p)) (++ (second p)))) (pair 1 1));
